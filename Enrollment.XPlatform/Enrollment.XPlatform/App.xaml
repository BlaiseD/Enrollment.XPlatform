<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:themes="clr-namespace:Enrollment.XPlatform.Themes"
             xmlns:config="clr-namespace:Enrollment.Forms.Configuration;assembly=Enrollment.Forms.Configuration"
             xmlns:utils="clr-namespace:Enrollment.XPlatform.Utils"
             x:Class="Enrollment.XPlatform.App">
    <!--
        Define global resources and styles here, that apply to all pages in your app.
    -->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <themes:DarkTheme />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        <ResourceDictionary>
            <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeBrands">
                <On Platform="Android" Value="FontAwesome5BrandsRegular400.otf#Regular" />
                <On Platform="iOS" Value="Font Awesome 5 Brands Regular" />
                <On Platform="UWP" Value="/Assets/FontAwesome5BrandsRegular400.otf#Font Awesome 5 Brands" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeSolid">
                <On Platform="Android" Value="FontAwesome5Solid900.otf#Regular" />
                <On Platform="iOS" Value="Font Awesome 5 Free Solid" />
                <On Platform="UWP" Value="/Assets/FontAwesome5Solid900.otf#Font Awesome 5 Free" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeRegular">
                <On Platform="Android" Value="FontAwesome5Regular.otf#Regular" />
                <On Platform="iOS" Value="Font Awesome 5 Free Regular" />
                <On Platform="UWP" Value="/Assets/FontAwesome5Regular400.otf#Font Awesome 5 Free" />
            </OnPlatform>

            <Style TargetType="Frame" x:Key="ResultListFrameStyle">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="HasShadow" Value="True" />
                <Setter Property="VerticalOptions" Value="CenterAndExpand"  />
                <Setter Property="BackgroundColor" Value="{DynamicResource ResultListBackgroundColor}" />
                <Setter Property="BorderColor" Value="{DynamicResource ResultListBorderColor}" />
            </Style>

            <Style TargetType="CollectionView" x:Key="ResultListCollectionViewStyle">
                <Setter Property="Margin" Value="0" />
                <Setter Property="BackgroundColor" Value="{DynamicResource ResultListBackgroundColor}" />
                <Setter Property="VerticalOptions" Value="Start" />
            </Style>

            <Style TargetType="Label" x:Key="ResultListLabelStyle" BaseResourceKey="SubtitleStyle">
                <Setter Property="Margin" Value="-20,-8,-20,0" />
                <Setter Property="Padding" Value="20,20,20,2" />
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            </Style>

            <Style TargetType="Label" x:Key="HeaderStyle" BaseResourceKey="TitleStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}" />
                <Setter Property="LineBreakMode" Value="NoWrap" />
            </Style>

            <Style TargetType="Label" x:Key="EditFormGroupHeaderStyle" BaseResourceKey="SubtitleStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="0,30,0,0" />
            </Style>

            <Style TargetType="Label" x:Key="DetailFormGroupHeaderStyle" BaseResourceKey="SubtitleStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="0,30,0,0" />
            </Style>

            <Style TargetType="Label" x:Key="DetailFormDeleteQuestionStyle" BaseResourceKey="SubtitleStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
                <Setter Property="Margin" Value="0,5,0,0" />
            </Style>

            <Style TargetType="Label" x:Key="TextFormGroupHeaderStyle" BaseResourceKey="SubtitleStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="0,5,0,0" />
            </Style>

            <Style TargetType="Label" x:Key="TextFormItemLabelStyle" BaseResourceKey="BodyStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            </Style>

            <Style TargetType="Label" x:Key="TextFormHyperLinkLabelStyle" BaseResourceKey="BodyStyle">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="TextColor" Value="{DynamicResource HyperLinkColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            </Style>

            <Style TargetType="Span" x:Key="TextFormItemSpanStyle" BaseResourceKey="BodyStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            </Style>

            <Style TargetType="Span" x:Key="TextFormHyperLinkSpanStyle" BaseResourceKey="BodyStyle">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="TextColor" Value="{DynamicResource HyperLinkColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}" />
            </Style>

            <Style TargetType="Entry" x:Key="BaseEntryStyle" >
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="BackgroundColor" Value = "{DynamicResource EntryBackgroundColor}" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="PlaceholderColor" Value = "{DynamicResource TertiaryTextColor}" />
            </Style>

            <Style TargetType="Entry" x:Key="DetailFormEntryStyle" BasedOn="{StaticResource BaseEntryStyle}">
                <Setter Property="HeightRequest" Value = "45" />
            </Style>

            <Style TargetType="Entry" BasedOn="{StaticResource BaseEntryStyle}">
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="Color" Value="{DynamicResource CheckBoxColor}" />
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="Color" Value="{DynamicResource CheckBoxDisabledColor}" />
                                </VisualState.Setters>
                            </VisualState>

                            <VisualState x:Name="IsChecked">
                                <VisualState.Setters>
                                    <Setter Property="Color" Value="{DynamicResource CheckBoxCheckedColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="SearchBar">
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="BackgroundColor" Value = "{DynamicResource EntryBackgroundColor}" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="PlaceholderColor" Value = "{DynamicResource TertiaryTextColor}" />
            </Style>

            <Style TargetType="Picker">
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="TitleColor" Value = "{DynamicResource TertiaryTextColor}" />
                <Setter Property="BackgroundColor" Value = "{DynamicResource EntryBackgroundColor}" />
            </Style>

            <Style TargetType="DatePicker">
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value = "{DynamicResource EntryBackgroundColor}" />
            </Style>

            <Style TargetType="Label">
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
            </Style>

            <Style TargetType="Label" x:Key="DetailFormLabel">
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="Padding"  Value = "5,15,0,10" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource EntryBackgroundColor}" />
            </Style>

            <Style TargetType="Label" x:Key="EditFormLabel">
                <Setter Property="Margin" Value = "0,10,0,0" />
                <Setter Property="Padding"  Value = "5,15,0,10" />
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource EntryBackgroundColor}" />
            </Style>

            <Style TargetType="Button">
                <Setter Property="TextColor" Value = "{DynamicResource PrimaryTextColor}" />
                <Setter Property="BackgroundColor" Value = "{DynamicResource CommandButtonBackgroundColor}" />
                <Setter Property="BorderColor" Value = "{DynamicResource CommandButtonBorderColor}" />
            </Style>

            <Style TargetType="Label" x:Key="ErrorTextStyle">
                <Setter Property="TextColor" Value = "{DynamicResource ErrorTextColor}"   />
                <Setter Property="FontSize" Value = "12"   />
            </Style>

            <Style TargetType="StackLayout" x:Key="MultiSelectPopupViewStyle">
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}"/>
                <Setter Property="HeightRequest" Value="464"/>
                <Setter Property="WidthRequest" Value="330"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>

            <Style TargetType="StackLayout" x:Key="FormArrayPopupViewStyle">
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}"/>
                <Setter Property="HeightRequest" Value="464"/>
                <Setter Property="WidthRequest" Value="330"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>

            <Style TargetType="StackLayout" x:Key="ChildFormPopupViewStyle">
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}"/>
                <Setter Property="HeightRequest" Value="464"/>
                <Setter Property="WidthRequest" Value="330"/>
                <Setter Property="Padding" Value="10,0" />
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>

            <Style TargetType="Grid" x:Key="MultiSelectItemStyle">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                        Value="{DynamicResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Grid" x:Key="ListItemStyle">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor"
                                        Value="{DynamicResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Grid" x:Key="TextDetailListItemStyle" BasedOn="{StaticResource ListItemStyle}">
                <Setter Property="HeightRequest" Value="65" />
            </Style>

            <Style TargetType="Grid" x:Key="HeaderTextDetailListItemStyle" BasedOn="{StaticResource ListItemStyle}">
                <Setter Property="HeightRequest" Value="85" />
            </Style>

            <Style TargetType="Grid" x:Key="PopupHeaderStyle">
                <Setter Property="BackgroundColor" Value="{DynamicResource NavigationBarColor}"/>
                <Setter Property="HeightRequest" Value="65"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
            </Style>

            <Style TargetType="Label" x:Key="PopupHeaderLabelStyle">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="HorizontalOptions" Value="CenterAndExpand"/>
                <Setter Property="VerticalOptions" Value="CenterAndExpand"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="FontAttributes" Value="Bold"/>
            </Style>

            <Style TargetType="BoxView" x:Key="PopupFooterSeparatorStyle">
                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="HeightRequest" Value="1"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="MultiSelectPopupCollectionViewStyle">
                <Setter Property="SelectionMode" Value="Multiple"/>
                <Setter Property="HeightRequest" Value="340"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="FormArrayPopupCollectionViewStyle">
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="HeightRequest" Value="340"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="SearchFormCollectionViewStyle">
                <Setter Property="SelectionMode" Value="Single"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="ListFormCollectionViewStyle">
                <Setter Property="SelectionMode" Value="None"/>
            </Style>

            <Style TargetType="CollectionView" x:Key="ChildFormPopupCollectionViewStyle">
                <Setter Property="SelectionMode" Value="None"/>
                <Setter Property="HeightRequest" Value="340"/>
            </Style>

            <Style TargetType="ScrollView" x:Key="ChildFormPopupScrollViewStyle">
                <Setter Property="HeightRequest" Value="340"/>
            </Style>

            <Style TargetType="Grid" x:Key="PopupFooterStyle">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="HeightRequest" Value="60"/>
            </Style>

            <Style TargetType="Button" x:Key="BaseCommandButtonStyle">
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="FontSize" Value="Small" />
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HeightRequest" Value="48"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource TertiaryTextColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource PressedPrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="PopupAcceptButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.Check}"/>
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <Style TargetType="Button" x:Key="PopupEditButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.Edit}" />
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <Style TargetType="Button" x:Key="PopupDetailButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.Info}" />
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <Style TargetType="Button" x:Key="PopupDeleteButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.TrashAlt}" />
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <Style TargetType="Button" x:Key="PopupCancelButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.Times}" />
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <Style TargetType="Button" x:Key="PopupAddButtonStyle" BasedOn="{StaticResource BaseCommandButtonStyle}">
                <Setter Property="Text" Value="{x:Static utils:FontAwesomeIconConstants.Plus}" />
                <Setter Property="FontFamily" Value="{StaticResource FontAwesomeSolid}" />
            </Style>

            <DataTemplate x:Key="CommndButtonItemTemplate" x:DataType="config:CommandButtonDescriptor" >
                <Grid>
                    <Frame
                        Margin="5"
                        Padding="0"
                        CornerRadius="5"
                        BackgroundColor="{DynamicResource CommandButtonBackgroundColor}"
                        BorderColor="{DynamicResource CommandButtonBorderColor}">
                        <Grid Padding="10">
                            <Label BackgroundColor="Transparent"
                                   VerticalOptions="CenterAndExpand"
                                   HorizontalTextAlignment="Center"
                                   Margin="0"
                                   LineBreakMode="WordWrap"
                                   Text="{Binding LongString}"
                                   TextColor="{DynamicResource PrimaryTextColor}">
                            </Label>
                        </Grid>
                    </Frame>
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal" />
                            <VisualState Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource SelectedCommandButtonBackgroundColor}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>       
    </Application.Resources>
</Application>
